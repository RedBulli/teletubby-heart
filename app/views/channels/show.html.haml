.span5.well.well-small
  %div
    %h1
      = I18n.t(:channel_header, name: @channel.name)
    = simple_form_for @channel, url: {action: "update"} do |f|
      %p
        - if flash[:notice]
          %strong= flash[:notice]
        = f.input :name
        = f.submit t(:save_changes), class: "btn"
  -if not @channel.default?
    .well.well-large
      = form_tag({controller: "channels", action: "destroy", id: @channel}, { method: "delete"}) do
        = submit_tag(t(:delete), confirm: I18n.t(:channel_deletion_confirmation, name: @channel.name), class: "btn btn-danger")
  .well.well-small
    = render partial: "shared/channel_slides", locals: { channel_slides: @channel.channel_slides, slide_list_class: "channel_slides"}
.span5.well.well-small
  %div
    = render partial: "shared/slide_list", locals: { slides: Slide.find(:all, :order => "name"), dest_channel: @channel, slide_list_class: "all_slides"}

:coffeescript
  slide_id = false
  $(document).ready ->
    init_sortable= () ->
      $(".channel_slides").sortable
        revert: true,
        connectWith: '.all_slides',
        accept: 'all_slides',
        receive: (event, ui) ->
            slide_id = ui.item.attr('id').substr(6)
        ,update: (event, ui) ->
          if slide_id
            id = slide_id
            slide_id = null
            $.ajax
                type: "POST"
                data: {slide_id: id, position: parseInt(ui.item.index())}
                url: "/channels/#{@channel.id}/slides"
          else
            id = ui.item.find("form #_channelslide_id").val()
            $.ajax
              type: "PUT"
              data: 'channel_slide[position]='+parseInt(ui.item.index())
              url: "/channels/#{@channel.id}/slides/"+id
      .disableSelection();

    init_droppable= () ->
      $(".all_slides").droppable
          accept: ".channel_slide"
          drop: (event, ui) ->

            id = ui.draggable.find("form #_channelslide_id").val()
            $.ajax
              type: "DELETE"
              url: "/channels/#{@channel.id}/slides/"+id
              success: (data)->
                updated_channels = $(data).find(".channel_slides")
                $(".channel_slides").replaceWith(updated_channels)
                init_sortable()
                init_droppable()
              error: ()->
              complete: ()->

      $(".all_slides li").draggable
        connectToSortable: '.channel_slides'
        helper: 'clone'
        rever: 'invalid'
        start: (e, ui) ->
          $(ui.helper).addClass("ui-draggable-helper")
          return
      .disableSelection();

    init_sortable()
    init_droppable()
